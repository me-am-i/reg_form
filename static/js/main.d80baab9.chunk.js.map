{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","handleHtmlControlChange","event","setState","target","name","value","handleSubmit","preventDefault","axios","post","state","then","res","data","success","message","login","password","errors","catch","error","console","log","this","className","map","el","msg","param","onSubmit","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAgEeA,E,kDAzDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,wBAA0B,SAACC,GACvB,EAAKC,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,SAZnC,EAenBC,aAAgB,SAACL,GACbA,EAAMM,iBACNC,IAAMC,KArBF,6BAqBY,EAAKC,OAChBC,MAAM,SAAAC,GACCA,EAAIC,KAAKC,QACT,EAAKZ,SAAS,CAACa,QAASH,EAAIC,KAAKC,QAAUE,MAAO,GAAIC,SAAU,GAAIC,OAAQ,KAG5E,EAAKhB,SAAS,CAAEa,QAAS,QAASG,OAAQN,EAAIC,KAAKK,YAG5DC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAzBhB,EAAKV,MAAQ,CACTM,MAAO,GACPC,SAAU,GACVF,QAAS,GACTG,OAAQ,IANG,E,qDA+BT,IAAD,EACwCK,KAAKb,MAA1CM,EADH,EACGA,MAAOC,EADV,EACUA,SAAUF,EADpB,EACoBA,QAASG,EAD7B,EAC6BA,OAClC,OACI,gCACI,qBAAKM,UAAU,SAAf,SAAyBT,IACzB,8BAAMG,EAAOO,KAAI,SAACC,GAAD,OACb,qBAAKF,UAAU,SAAf,SACKE,EAAGC,KADqBD,EAAGE,YAIpC,uBAAMC,SAAUN,KAAKjB,aAArB,UACI,gCACI,uBAAOkB,UAAU,QAAjB,qBACA,uBAAOM,KAAK,OAAO1B,KAAK,QAAQC,MAAOW,EAAOe,SAAUR,KAAKvB,6BAEjE,gCACI,uBAAOwB,UAAU,QAAjB,wBACA,uBAAOM,KAAK,OAAO1B,KAAK,WAAWC,MAAOY,EAAUc,SAAUR,KAAKvB,6BAEvE,wBAAQ8B,KAAK,SAAb,8B,GApDDE,aCQJC,MAVf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d80baab9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst url = 'http://localhost:3001/user';\n\nclass Form extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            login: '',\n            password: '',\n            message: '',\n            errors: []\n        };\n\n    };\n\n    handleHtmlControlChange = (event) => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit  = (event) => {\n        event.preventDefault();\n        axios.post(url, this.state)\n            .then( res => {\n                if (res.data.success) {\n                    this.setState({message: res.data.success,  login: '', password: '', errors: []});\n                }\n                else {\n                    this.setState({ message: 'Error', errors: res.data.errors });\n                }\n\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    render() {\n        const { login, password, message, errors } = this.state;\n        return (\n            <div>\n                <div className=\"result\">{message}</div>\n                <div>{errors.map((el) =>\n                    <div className=\"errors\" key={el.param}>\n                        {el.msg}\n                    </div>\n                )}</div>\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label className='label'>Login: </label>\n                        <input type='text' name=\"login\" value={login} onChange={this.handleHtmlControlChange} />\n                    </div>\n                    <div>\n                        <label className='label'>Password: </label>\n                        <input type='text' name=\"password\" value={password} onChange={this.handleHtmlControlChange} />\n                    </div>\n                    <button type='submit'>Submit</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Form;","import './App.css';\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Form />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}